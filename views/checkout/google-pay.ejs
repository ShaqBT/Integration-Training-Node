<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Google Pay</title>
    <link rel="stylesheet" href="/style2.css" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>

<body>
    <%- include('../partials/nav-bar.ejs') %>
        <div class="container-fluid mx-auto">

            <div style="height: 50vh; display: flex; align-items: center; justify-content: center;">
                <form id="payment-form" style="text-align: center;" action="/sale" method="post">
                    <input type="hidden" name="amount" id="amount" value="100">
                    <input type="hidden" name="nonce" id="nonce" value="100">
                    <div id="google-pay-container"></div>
                </form>
            </div>

            <div class='docs-card mx-auto' style="width: fit-content;">
                <section style="display: flex; justify-content: space-evenly;">
                    <a target="_blank"
                        href="https://developer.paypal.com/braintree/docs/guides/google-pay/client-side/javascript/v3/"
                        class="btn btn-primary">Google Pay Client-Side Docs</a>
                    <a target="_blank" href="https://braintree.github.io/braintree-web/current/GooglePayment.html"
                        class="btn btn-primary">Additonal Documentation</a>
                    <a target="_blank" href="https://developers.google.com/pay/api/web/guides/setup#get-started"
                        class="btn btn-primary">Google's Documentation</a>
                </section>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
        <script src="https://pay.google.com/gp/p/js/pay.js"></script>
        <script src="https://js.braintreegateway.com/web/3.97.2/js/client.min.js"></script>
        <script src="https://js.braintreegateway.com/web/3.97.2/js/google-payment.min.js"></script>

        <script>

            const form = document.getElementById("payment-form")

            const CLIENT_AUTHORIZATION = "<%= clientToken %>"

            var paymentsClient = new google.payments.api.PaymentsClient({
                environment: 'TEST'
            });

            const googlePayContainer = document.getElementById('google-pay-container');

            const button = paymentsClient.createButton({
                buttonColor: "default",
                buttonType: "checkout",
                onClick: () => { },
                allowedPaymentMethods: [
                    {
                        "type": "CARD",
                        "parameters": {
                            "allowedAuthMethods": ["PAN_ONLY", "CRYPTOGRAM_3DS"],
                            "allowedCardNetworks": ["AMEX", "DISCOVER", "INTERAC", "JCB", "MASTERCARD", "VISA"]
                        }
                    }
                ],
            })

            googlePayContainer.appendChild(button);

            braintree.client.create({
                authorization: CLIENT_AUTHORIZATION
            }, (clientErr, clientInstance) => {
                braintree.googlePayment.create({
                    client: clientInstance,
                    googlePayVersion: 2,
                    googleMerchantId: 'merchant-id-from-google'
                }, (googlePaymentErr, googlePaymentInstance) => {
                    paymentsClient.isReadyToPay({
                        apiVersion: 2,
                        apiVersionMinor: 0,
                        allowedPaymentMethods: googlePaymentInstance.createPaymentDataRequest().allowedPaymentMethods,
                        existingPaymentMethodRequired: true
                    }).then((response) => {
                        if (response.result) {
                            button.addEventListener('click', (event) => {
                                event.preventDefault();

                                var paymentDataRequest = googlePaymentInstance.createPaymentDataRequest({
                                    transactionInfo: {
                                        currencyCode: 'USD',
                                        totalPriceStatus: 'FINAL',
                                        totalPrice: '100.00'
                                    }
                                });

                                var cardPaymentMethod = paymentDataRequest.allowedPaymentMethods[0];
                                cardPaymentMethod.parameters.billingAddressRequired = true;
                                cardPaymentMethod.parameters.billingAddressParameters = {
                                    format: 'FULL',
                                    phoneNumberRequired: true
                                };

                                paymentsClient.loadPaymentData(paymentDataRequest).then((paymentData) => {
                                    googlePaymentInstance.parseResponse(paymentData, (err, result) => {
                                        if (err) {
                                            console.log(err)
                                        }
                                        const nonce = result.nonce
                                        const nonceInput = document.getElementById("nonce")
                                        nonceInput.value = nonce
                                        form.submit()
                                    });
                                }).catch((err) => {
                                    console.log(err)
                                });
                            });
                        }
                    }).catch((err) => {
                        console.log(err)
                    });
                });
            });

        </script>
</body>

</html>